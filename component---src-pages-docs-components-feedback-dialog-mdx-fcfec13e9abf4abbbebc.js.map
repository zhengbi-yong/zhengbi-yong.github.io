{"version":3,"file":"component---src-pages-docs-components-feedback-dialog-mdx-fcfec13e9abf4abbbebc.js","mappings":"qPAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIgB,kBAJR,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,IAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,IAACE,EAASO,OAAAC,OAAA,GAAKT,EAAiBJ,EAAK,CAAES,WAAYA,EAAYK,QAAQ,eAG5EX,EAAAA,EAAAA,IAACL,EAAe,CAACgB,QAAQ,oBACvBX,EAAAA,EAAAA,IAAA,iBAAWA,EAAAA,EAAAA,IAAA,cAAYY,WAAW,KAAG,oBAAkC,+HAGzEZ,EAAAA,EAAAA,IAAA,oCACAA,EAAAA,EAAAA,IAAA,8EAAwEA,EAAAA,EAAAA,IAAA,cAAYY,WAAW,KAAG,YAA0B,oDAChFZ,EAAAA,EAAAA,IAAA,cAAYY,WAAW,KAAG,kBAAgC,gBACtGZ,EAAAA,EAAAA,IAAA,WACEA,EAAAA,EAAAA,IAAA,MAAIY,WAAW,OACbZ,EAAAA,EAAAA,IAAA,KAAGY,WAAW,MAAI,wCACxBZ,EAAAA,EAAAA,IAAA,cAAYY,WAAW,KAAG,uEAAqF,yDAG3GZ,EAAAA,EAAAA,IAAA,MAAIY,WAAW,OACbZ,EAAAA,EAAAA,IAAA,KAAGY,WAAW,MAAI,oDAGtBZ,EAAAA,EAAAA,IAAA,YAAKA,EAAAA,EAAAA,IAAA,QAAMY,WAAW,MAClB,UAAa,gBAAc,iWAc/BZ,EAAAA,EAAAA,IAAA,iCACAA,EAAAA,EAAAA,IAAA,4IAEFA,EAAAA,EAAAA,IAAA,KAAGY,WAAW,IACR,KAAQ,gCAA8B,eAClB,sCAC1BZ,EAAAA,EAAAA,IAAA,KAAGY,WAAW,IACR,KAAQ,oFAAkF,QAC7E,MACjBZ,EAAAA,EAAAA,IAAA,8FACFA,EAAAA,EAAAA,IAAA,cAAYY,WAAW,KAAG,YAA0B,kGAElDZ,EAAAA,EAAAA,IAAA,WACEA,EAAAA,EAAAA,IAAA,MAAIY,WAAW,OAAKZ,EAAAA,EAAAA,IAAA,cAAYY,WAAW,MAAI,cAA4B,0CAC3EZ,EAAAA,EAAAA,IAAA,MAAIY,WAAW,OAAKZ,EAAAA,EAAAA,IAAA,cAAYY,WAAW,MAAI,WAAyB,0BACxEZ,EAAAA,EAAAA,IAAA,MAAIY,WAAW,OAAKZ,EAAAA,EAAAA,IAAA,cAAYY,WAAW,MAAI,QAAsB,yDAEvEZ,EAAAA,EAAAA,IAAA,YAAKA,EAAAA,EAAAA,IAAA,QAAMY,WAAW,MAClB,UAAa,gBAAc,4PAanC,CAEAR,EAAWS,gBAAiB,C","sources":["webpack://example/./src/pages/docs/components/FeedbackDialog.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/zhengbi-yong.github.io/zhengbi-yong.github.io/slog-carbon/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`<FeedbackDialog>`}</inlineCode>{` component is a non-modal dialog that allows your users to\nprovide low-friction, anonymous feedback for a specific page.`}</p>\n    </PageDescription>\n    <h2>{`Activating the dialog`}</h2>\n    <p>{`The Feedback button only becomes visible once you’ve supplied an `}<inlineCode parentName=\"p\">{`onSubmit`}</inlineCode>{`\nhandler. To do that, we’ll need to shadow the `}<inlineCode parentName=\"p\">{`FeedbackDialog`}</inlineCode>{` component.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a new javascript file under\n`}<inlineCode parentName=\"p\">{`src/gatsby-theme-carbon/components/FeedbackDialog/FeedbackDialog.js`}</inlineCode>{`.\nMatching the filepath exactly is important here.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy the following snippet into your new file`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport ThemeFeedbackDialog from 'gatsby-theme-carbon/src/components/FeedbackDialog/FeedbackDialog';\n\nconst FeedbackDialog = ({ props }) => {\n  const onSubmit = (data) => {\n    console.log({ ...data });\n  };\n\n  return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n};\n\nexport default FeedbackDialog;\n`}</code></pre>\n    <h2>{`Creating a handler`}</h2>\n    <p>{`Next, you’ll need a place to send the data. For the Carbon website, we use a\nserverless function that forwards the data to a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.surveygizmo.com/\"\n      }}>{`SurveyGizmo`}</a>{` quiz. You can see that function\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon-website/blob/master/api/survey.ts\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`The handler can send a fetch request off to the endpoint you create. Update the\n`}<inlineCode parentName=\"p\">{`onSubmit`}</inlineCode>{` handler to send the data wherever you want. This function receives\nthe following arguments:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`experience`}</inlineCode>{`: “Negative”, “Positive” or “Neutral”`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`comment`}</inlineCode>{`: An optional comment`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`path`}</inlineCode>{`: the window location when the survey was submitted`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const FeedbackDialog = ({ props }) => {\n  const onSubmit = data => {\n    fetch(process.env.API_ENDPOINT, {\n      method: 'POST',\n      body: JSON.stringify(data),\n  });\n\n  return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","PageDescription","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","isMDXComponent"],"sourceRoot":""}