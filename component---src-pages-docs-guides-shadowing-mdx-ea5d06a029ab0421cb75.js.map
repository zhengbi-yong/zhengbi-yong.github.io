{"version":3,"file":"component---src-pages-docs-guides-shadowing-mdx-ea5d06a029ab0421cb75.js","mappings":"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","sources":["webpack://example/./src/pages/docs/guides/shadowing.mdx","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/zhengbi-yong.github.io/zhengbi-yong.github.io/slog-carbon/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`In the world of Gatsby themes,\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://www.gatsbyjs.org/blog/2019-04-29-component-shadowing/\"\n        }}>{`component shadowing`}</a>{`\nis an extremely powerful way for developers to provide their `}<em parentName=\"p\">{`own`}</em>{` components\nfor the theme to use over the defaults. You can shadow any file that is\nprocessed by webpack. This includes sass files, mdx files, and the react\ncomponents themselves.`}</p>\n    </PageDescription>\n    <h2>{`Caveats`}</h2>\n    <p>{`If you completely shadow a file you won’t get future updates to that individual\nfile. These are some golden rules to make sure you stay as close to the theme as\npossible and not forgo future updates.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open a\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/issues/new\"\n          }}>{`quick issue`}</a>{`\nin the gatsby-theme-carbon repo to make sure we’re not working on your\nchange.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Shadow as few files as you can to achieve your goal. If you can shadow just a\nsingle file, that’s ideal.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If you do end up shadowing a component, please tell us! We might use it to\ninform future development.`}</p>\n      </li>\n    </ol>\n    <h2>{`Shadowing basics`}</h2>\n    <p>{`In order to shadow a component in the theme, all you need to do is place a directory\nin the `}<inlineCode parentName=\"p\">{`src/gatsby-theme-carbon`}</inlineCode>{` in your project. The directory should have the same\nname as the file you’re shadowing.`}</p>\n    <p>{`In order to place your own title in the Header component:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a directory the same name as the component you wish to shadow.\nEverything after `}<inlineCode parentName=\"p\">{`src/gatsby-theme-carbon/`}</inlineCode>{` refers to the\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/tree/main/packages/gatsby-theme-carbon/src\"\n          }}>{`src directory of gatsby-theme-carbon`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a file inside of the directory that matches the component you want to shadow. For example: `}<inlineCode parentName=\"p\">{`src/gatsby-theme-carbon/components/Header/index.js`}</inlineCode>{`. `}<em parentName=\"p\">{`If shadowing Footer or Header the file must be named `}<strong parentName=\"em\"><inlineCode parentName=\"strong\">{`index.js`}</inlineCode></strong></em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Import the component you wish to shadow by providing the full url pointing at\nthe component within the theme`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Your component will `}<strong parentName=\"p\">{`receive the same props`}</strong>{` as the one you’re shadowing.\nYou’ll can log those props to see if you’ll need any of them`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Regardless, you should `}<em parentName=\"p\">{`ALWAYS`}</em>{` spread the extra props into the original\ncomponent, this allows the core component to function as needed. Even if it\ndoesn’t receive any props now, it might in the future.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Provide your new, custom component as the default export`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport Header from 'gatsby-theme-carbon/src/components/Header';\n\nconst CustomHeader = (props) => (\n  <Header {...props}>\n    <span>Gatsby theme</span>&nbsp;Carbon\n  </Header>\n);\n\nexport default CustomHeader;\n`}</code></pre>\n    <h2>{`Components you’ll need to shadow`}</h2>\n    <p>{`We’ve already provided pre-shadowed, dummy components however these are the ones\nyou’ll definitely need to shadow.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Path`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ResourceLinks`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/blob/main/packages/example/src/gatsby-theme-carbon/components/LeftNav/ResourceLinks.js\"\n            }}><inlineCode parentName=\"a\">{`src/gatsby-theme-carbon/components/LeftNav/ResourceLinks.js`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The bottom links on the SideNav, pass `}<inlineCode parentName=\"td\">{`shouldOpenNewTabs`}</inlineCode>{` to open links externally`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Footer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/blob/main/packages/example/src/gatsby-theme-carbon/components/Footer/index.js\"\n            }}><inlineCode parentName=\"a\">{`src/gatsby-theme-carbon/components/Footer/index.js`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The links and content at the bottom of each page`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Header`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/blob/main/packages/example/src/gatsby-theme-carbon/components/Header/index.js\"\n            }}><inlineCode parentName=\"a\">{`src/gatsby-theme-carbon/components/Header/index.js`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The text in the top left corner of the UI Shell`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","PageDescription","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","isMDXComponent","darkMode","withTabs","title","theme","tabs","React","className","cx","styles","length","id","relativePagePath","repository","repositoryProp","site","siteMetadata","useStaticQuery","baseUrl","subDirectory","branch","href","selectedItem","PageTabs","_React$Component","apply","arguments","_inheritsLoose","prototype","render","slug","this","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","date","lastModified","Date","Row","Column","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","PageHeader","label","Main","padded","EditLink","LastModifiedDate","NextPrevious","Utils"],"sourceRoot":""}